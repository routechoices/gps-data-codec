name: Python

on:
  push:
  pull_request:

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64]
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@stable
    - name: Build wheels
      uses: PyO3/maturin-action@v1
      with:
        command: build
        args: --release -i python3.10 --out dist
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install built wheel
      if: matrix.target == 'x86_64'
      run: |
        pip install gps_encoding --no-index --find-links dist --force-reinstall
        python test.py
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [linux]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Publish to PyPi
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          pip install --upgrade twine
          twine upload --skip-existing *
